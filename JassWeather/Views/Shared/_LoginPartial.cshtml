@{  
    int? CurrentRequestSetId = (int?)Session["CurrentRequestSetId"];
    string CurrentRequestSetName = (string)Session["CurrentRequestSetName"];
}

@if (Request.IsAuthenticated) {
    
        <text>User: </text>@Html.ActionLink(User.Identity.Name, "Manage", "Account", routeValues: null, htmlAttributes: new { @class = "username", title = "Manage" })                                                                                                                                                                          
        using (Html.BeginForm("LogOff", "Account", FormMethod.Post, new { id = "logoutForm" })) {
            @Html.AntiForgeryToken()

    if(User.IsInRole("Admin") || User.IsInRole("Envirolytic")){
        if (Session["StorageConnectionString"] == "StorageConnectionString"){
        <text>InternalBufferOverflowException Storage </text>}
        if (Session["StorageConnectionString"] == "StorageConnectionString"){
        <text>InternalBufferOverflowException Storage </text>}                                                    
    }
            <a href="javascript:document.getElementById('logoutForm').submit()">Log off</a>
        }
        if(CurrentRequestSetId!=null){            
        <p>Working on API: @CurrentRequestSetName (@CurrentRequestSetId)</p>
        }

}