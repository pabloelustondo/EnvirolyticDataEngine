

<h1>What is this?</h1> <br />
<p>

    This is just a very early stage prototype/proof concept to experiment with:
    <ul>
        <li>getting real time information from Weather APIs (now)</li>
        <li>using metadata to define which and how APIs are called and how information is retrieved and used (now partial)</li>
        <li>storing this information into a fact table with a normalized schema (future)</li>
        <li>get historical information in bulk and storing it using the same schema (future)</li>
         <li>moving historical information to hadoop cluster (future)</li>
    </ul>
    This home page in particular is just a 'sanity test' and will show errors in case something is wrong with the setup.
    
    Just to give a test of what is comming, below you will see a real response from a real call 
    to the weather underground apis. 
    <br />
    Note: An error may be caused by reaching the limits on our developer access to APIs
</p>

<h1>What can i do for now?</h1> <br />

For now you can go to the "Weather APIs" menu to see/add/modify the few currently defined APIs.
An API is basically a set of calls and each call is normally defined, at least, by an URL.
Future version will add more information to be able to process the response.
For each defined API Request you can use the application to actually place the call and see what you get
as response.


<h1>Sample Request to Weather Underground</h1> <br />

"http://api.wunderground.com/api/501a82781dc79a42/geolookup/conditions/q/IA/Cedar_Rapids.json";

<br/><br/>
<h1>Sample Response from Weather Underground </h1>
<table>
            @{Newtonsoft.Json.JsonTextReader reader = new Newtonsoft.Json.JsonTextReader(new StringReader(ViewBag.response1));}
            @while (reader.Read())
            {
                  if (reader.Value != null){                       
                     <tr><td>@reader.TokenType</td><td>@reader.Value</td></tr>;
                  }
                else{
                     <tr><td>@reader.TokenType</td><td></td></tr>;
                }
            }
</table>





